// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostmanSandbox.Data;

#nullable disable

namespace MediaMakerTechTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediaMakerTechTest.Models.Addition", b =>
                {
                    b.Property<double>("Input1")
                        .HasColumnType("float");

                    b.Property<double>("Input2")
                        .HasColumnType("float");

                    b.ToTable("Additions");
                });

            modelBuilder.Entity("MediaMakerTechTest.Models.Division", b =>
                {
                    b.Property<double>("Input1")
                        .HasColumnType("float");

                    b.Property<double>("Input2")
                        .HasColumnType("float");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("MediaMakerTechTest.Models.Multiplication", b =>
                {
                    b.Property<double>("Input1")
                        .HasColumnType("float");

                    b.Property<double>("Input2")
                        .HasColumnType("float");

                    b.ToTable("Multiplications");
                });

            modelBuilder.Entity("MediaMakerTechTest.Models.Subtraction", b =>
                {
                    b.Property<double>("Input1")
                        .HasColumnType("float");

                    b.Property<double>("Input2")
                        .HasColumnType("float");

                    b.ToTable("Subtractions");
                });
#pragma warning restore 612, 618
        }
    }
}
